## UserStartup¥Goodies## Initializes the goodies package and sets up menus## IMPORTANT NOTE:##	You MUST edit this file to match your configuration BEFORE# installing this package.## MPW Goodies Package# Copyright Apple Computer, Inc. 1988. All Rights Reserved.# Macintosh Developer Technical Support.# May be distributed freely but not sold.############################################################################################## This section needs to be modified to work############################################################################################# Set this to be the folder where you keep the Goodies files.# By default, this is defined to be inside of the MPW# folder. CHANGE IT IF YOU DIDN'T PUT THE GOODIES FOLDER INSIDE# THE {MPW} FOLDER.	Set Goodies "{MPW}Goodies:"	Export Goodies# look in Goodies for commands and scripts# If you want to be able to run applications like ResEdit and Font/DA Mover# from the Key Menu (Command-Key symbol), you should add them to the end of this# list. Don't forget the comma!	Set Commands "{Goodies},{Commands}"	Export Commands# Projector stuff	Set UserInitials "PUT YOUR INITIALS HERE"	Set Writers "PUT NAMES OF ALL SOFTWARE AUTHORS HERE"	If "{User}" == ""		Set User "PUT YOUR FULL NAME HERE"	End	Export UserInitials	Export Writers	Export User# Set to the folder containing your source code	Set SourceDir	"PUT SOURCE FOLDER HERE, OR SET TO {MPW}"	Export			SourceDir# MacApp 2.0's MABuild allows a large set of flags. We have defined some# handy flag handlers in the MyBuildMenu script. These variables control the# initial settings of these variables	Set MADebuggingFlag		1		# compile with MacApp debugging turned on	Set MASADEFlag			0		# compile with SADE symbols	Set MARunFlag			1		# run application after build	Set MAAutoBuildFlag		0		# autobuild MacApp library	Set MACPlusLoadFlag		0		# use C++ load files	Set MACPlusSupportFlag	0		# require C++ libraries	Set MAMacIIFlag			0		# require 68020, FPU, and ColorQD	Set MASystem6Flag		1		# require system 6 or better# We set this to be the directory where an older version of MPW lives# (e.g., MPW 2.0.2, MPW 3.0b1, etc). I use MPW 3.0 and a newer,# experimental version, so my old MPW is actually MPW 3.0. You# will probably want to set this to something else.	Set OldMPWPath "PUT PATHNAME FOR OLD MPW FOLDER HERE, OR LEAVE IT BLANK"	Export OldMPWPath# We set default font and fontsize variables here, since we use them in# a command below. You can set these to whatever you prefer, but be sure# they are set to something. You can comment these lines out if you set# these variables up in your UserStartup file.	Set Font		Courier	Set FontSize	10############################################################################################# You probably won't need to modify anything below here.############################################################################################# A handy alias to get files sorted by date, most recent firstAlias lsd "Files -n -x m | Sort -quote -r -d -f '4,2,3,7,5,6,1' -fs ' /:' ³ Dev:Null"# Set variable for list of directories containing projects	Set ProjDirList "{Goodies}ProjectFolders"	Export			ProjDirList# list of invisible characters: edit with Show Invisibles on	Set InvisibleSet '
ÚÛÜÝÞßàáâãäåæçèéêëìíîïðñòóôõö÷øùúûüýþÿ'# set up path for old MPW first...	Set OldCommands "{OldMPWPath}Tools:,{OldMPWPath}Scripts:,{Commands}"	Export OldCommands# Set up our project hierarchy	Execute InitProjector# Setup Edit Menu	AddMenu Edit '(-' ''	# Justify a selected block of text with default margins (of 0 and 60).	AddMenu Edit 'Justify/Æ'	¶		'Justify "{Active}".¤ > "{MPW}"MPW.Justify;		¶		 Catenate "{MPW}"MPW.Justify > "{Active}".¤;	¶		 Delete "{MPW}"MPW.Justify'		# Justify a selected block of text with a hanging indent	AddMenu Edit 'Hanging Indent/ú'	¶		'Justify -l `Request -d "0,4" What indent do you want.` "{Active}".¤ > "{MPW}"MPW.Justify;		¶		 Catenate "{MPW}"MPW.Justify > "{Active}".¤;	¶		 Delete "{MPW}"MPW.Justify'		# Justify a selected block of text adding a ¶ to each line	# Useful for contining lines in makefiles or shell scripts	AddMenu Edit "Continued/¶¶"	¶		'Justify -e "¶¶" -l `Request -d "0,4" What indent do you want.` "{Active}".¤ > "{MPW}"MPW.Justify;		¶		 Catenate "{MPW}"MPW.Justify > "{Active}".¤;	¶		 Delete "{MPW}"MPW.Justify'		## Join this line and the next	AddMenu Edit '(-' ''	AddMenu Edit 'Join' 'Replace /[¶t ]*¶n[¶t ]*/ "" "{Active}"'	AddMenu Edit 'Join Space' 'Replace /[¶t ]*¶n[¶t ]*/ " " "{Active}"'	Set TemporaryFile "{SystemFolder}MPWÑScratch"	Delete -i "{TemporaryFile}"	AddMenu Edit '(-' ''	AddMenu Edit 'Default Font/1' 'Format -f "{Font}" -s "{FontSize}" "{Active}"'# modify the find menu	AddMenu Find (- ''	AddMenu Find 'Find Invisible/Ä' 'Find /[{InvisibleSet}]/ "{Active}"'	AddMenu Find '(-' ''	AddMenu Find 'Set Mark/Ê' 'Mark -y ¤ theMark "{Active}"'	AddMenu Find 'Goto Mark/Â' 'Find theMark "{Active}"'# create the lookup menu	Execute LookupMenu# create the project menu	Execute ProjectMenu# Create the build menu	Execute MyBuildMenu# Create the CommandKey menu	Execute KeyMenu