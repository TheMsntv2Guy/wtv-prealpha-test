/* Script to dial and login to the USR/Netserver ppp server (Livingston)
 *
 * TARGET:		artemis pop
 * DIAL TYPE:	NXX
 * DEST NUMBER:	329 0511
 * ASSUMPTIONS:	caller is in same area code as pop
 *
 */

int dterate;
int dcerate;
int protocol;
int compression;

parseResult(int result)
{
	int retcode = 0;

	printf("TellyScript: parseResult -- %d", result);
 
 	if (result == 0)				/* OK */
		{
		retcode = 0;
		}
	else if (result == 1)			/* CONNECT */
		{
		dterate = 300;
		}
	else if (result == 3)			/* NO CARRIER */
		{
		printf("TellyScript: Got NO CARRIER");
		retcode = 8;				/* kTellyHandshakeFailure */
		}
	else if (result == 5)			/* CONNECT 1200 */
		{
		dterate = 1200;
		}
	else if (result == 6)			/* NO DIALTONE */
		{
		printf("TellyScript: Got NO DIALTONE");
		retcode = 5;				/* kTellyNoDialtone */
		}
	else if (result == 7)			/* BUSY */
		{
		printf("TellyScript: Got BUSY");
		retcode = 7;
		}
	else if (result == 8)			/* NO ANSWER */
		{
		retcode = 7;				/* kTellyBusy */
		}
	else if (result == 9)			/* CONNECT 0600 */
		{
		dterate = 0600;
		}
	else if (result == 10)			/* CONNECT 2400 */
		{
		dterate = 2400;
		}
	else if (result == 11)			/* CONNECT 4800 */
		{
		dterate = 4800;
		}
	else if (result == 12)			/* CONNECT 9600 */
		{
		dterate = 9600;
		}
	else if (result == 13)			/* CONNECT 7200 */
		{
		dterate = 7200;
		}
	else if (result == 14)			/* CONNECT 12000 */
		{
		dterate = 12000;
		}
	else if (result == 15)			/* CONNECT 14000 */
		{
		dterate = 14400;
		}
	else if (result == 16)			/* CONNECT 19200 */
		{
		dterate = 19200;
		}
	else if (result == 17)			/* CONNECT 38400 */
		{
		dterate = 38400;
		}
	else if (result == 18)			/* CONNECT 57600 */
		{
		dterate = 57600;
		}
	else if (result == 19)			/* CONNECT 115200 */
		{
		dterate = 115200;
		}
	else if (result == 22)			/* CONNECT 75TX/1200RX */
		{
		printf("TellyScript: Got a CONNECT 75TX/1200RX and I don't know why");
		dterate	= 75;
		}
	else if (result == 23)			/* CONNECT 1200TX/75RX */
		{
		printf("TellyScript: Got a CONNECT 75TX/1200RX and I don't know why");
		dterate = 1200
		}
	else if (result == 40)			/* CARRIER 300 */
		{
		dcerate = 300;
		}
	else if (result == 44)			/* CARRIER 1200/75 */
		{
		printf("TellyScript: Got a CONNECT 75TX/1200RX and I don't know why");
		dcerate	= 1200;
		}
	else if (result == 45)			/* CARRIER 75/1200 */
		{
		printf("TellyScript: Got a CONNECT 75TX/1200RX and I don't know why");
		dcerate	= 1200;
		}
	else if (result == 46)			/* CARRIER 1200 */
		{
		dcerate = 1200;
		}
	else if (result == 47)			/* CARRIER 2400 */
		{
		dcerate = 2400;
		}
	else if (result == 48)			/* CARRIER 4800 */
		{
		dcerate = 4800;
		}
	else if (result == 49)			/* CARRIER 7200 */
		{
		dcerate = 7200;
		}
	else if (result == 50)			/* CARRIER 9600 */
		{
		dcerate = 9600;
		}
	else if (result == 51)			/* CARRIER 12000 */
		{
		dcerate = 12000;
		}
	else if (result == 52)			/* CARRIER 14400 */
		{
		dcerate = 14400;
		}
	else if (result == 53)			/* CARRIER 16800 */
		{
		dcerate = 16800;
		}
	else if (result == 54)			/* CARRIER 19200 */
		{
		dcerate = 19200;
		}
	else if (result == 55)			/* CARRIER 21600 */
		{
		dcerate = 21600;
		}
	else if (result == 56)			/* CARRIER 24000 */
		{
		dcerate = 24000;
		}
	else if (result == 57)			/* CARRIER 26400 */
		{
		dcerate = 26400;
		}
	else if (result == 58)			/* CARRIER 28800 */
		{
		dcerate = 28800;
		}
	else if (result == 59)			/* CONNECT 16800 */
		{
		dcerate = 16800;
		}
	else if (result == 61)			/* CONNECT 21600 */
		{
		dcerate = 21600;
		}
	else if (result == 62)			/* CONNECT 24000 */
		{
		dcerate = 24000;
		}
	else if (result == 63)			/* CONNECT 26400 */
		{
		dcerate = 26400;
		}
	else if (result == 64)			/* CONNECT 28800 */
		{
		dcerate = 28800;
		}
	else if (result == 66)			/* COMPRESSION: CLASS 5 */
		{
		compression = 1;
		}
	else if (result == 67)			/* COMPRESSION: V.42bis */
		{
		compression = 2;
		}
	else if (result == 69)			/* COMPRESSION: NONE */
		{
		compression = 0;
		}
	else if (result == 76)			/* PROTOCOL: NONE */
		{
		protocol = 0;
		}
	else if (result == 77)			/* PROTOCOL: LAPM */
		{
		protocol = 1;
		}
	else if (result == 79)			/* CONNECT 33600 */
		{
		}
	else if (result == 80)			/* PROTOCOL: ALT */
		{
		protocol = 2;
		}
	else if (result == 81)			/* PROTOCOL: ALT-CELLULAR */
		{
		protocol = 3;
		}
	else
		{
		printf("TellyScript: Unknown result code %d", result);
		retcode = 9;				/* kTellyUnknownError */
		}

	return retcode;
}

winkdtr()
{
	setdtr(0);		/* wink dtr */
	delay(30);
	setdtr(1);
}

main()
{
	int count, i, retries, result;
	int start = ticks();
	int end;
	char *number;
	char buffer[32];
	char *settings = getphonesettings();
	char *accessNumber = &settings[64];
	char *dialOutsidePrefix = &settings[32];
	char *callWaitingPrefix = &settings[0];
	char usePulseDialing = settings[96];
	char audibleDialing = settings[97];
	char disableCallWaiting = settings[98];
	char dialOutsideLine = settings[99];
	char changedCity = settings[100];
	char waitForTone = settings[101];
	char numberToDial[32];
	char dialCommand[80];
	char *configurationCommand = "ATS38=0S30=180S95=36S11=60&D2V1E0L2&Q5&K3\r";
	char *defaultNumber = "3290511";

	printf("TellyScript: LOCAL Registration Script 2.1");

/* built in ability to dial a user-specified POP number */

	if (accessNumber[0])
		strcpy(numberToDial, accessNumber);
	else
		strcpy(numberToDial, defaultNumber);

/* set default dialing string */

	strcpy(dialCommand, "ATV0");

/* handle audible dialing */

	if (audibleDialing)
		strcat(dialCommand, "M1");
	else
		strcat(dialCommand, "M0");

/* add blind dialing */

	if (waitForTone)
		strcat(dialCommand, "X4");
	else
		strcat(dialCommand, "X3");

/* handle pulse or tone dialing */

	if (usePulseDialing)
		strcat(dialCommand, "DP");
	else
		strcat(dialCommand, "DT");

/* handle a special char sequence to get disable call waiting */

	if (disableCallWaiting)
		{
		strcat(dialCommand, callWaitingPrefix);
		}

/* handle a special char sequence to get an outside line */

	if (dialOutsideLine)
		{
		strcat(dialCommand, dialOutsidePrefix);
		strcat(dialCommand, ",");
		}

	enablemodem();			/* turn on ints */

	winkdtr();
	setflowcontrol(3);		/* hardware flow */
	setbaud(57600);

	setstatus(6);			/* kTellyInitializingModem */
	retries = 0;
	while (retries++ <= 2)
		{
		flush();

		sendstr(configurationCommand);
		if (waitfor("OK", 2, 120))
			{
			printf("TellyScript: Configured modem.");
			break;
			}
		else
			{
			printf("TellyScript: TIMEOUT waiting for OK");
			winkdtr();
			}
		}

	if (retries > 3)
		{
		printf("TellyScript: Couldn't get OK from modem");
		setdtr(0);
		return 3;					/* kTellyConfigurationError */
		}

	setstatus(3);					/* kTellyDialing */

	printf("TellyScript: Dialing %s...", numberToDial);
	if ((numberToDial[0] != 'A') && (numberToDial[0] != 'a'))
		sendstr(dialCommand);
	sendstr(numberToDial);

	sendstr(";\r");

	flush();

	i = 0;
	while(i++ < 4)
		{
		count = getline(buffer, 31, 3600);
		
		if (count == 0)
			{
			printf("TellyScript: TIMEOUT waiting for dial result.");
			setdtr(0);
			return 4;							/* kTellyDialingError */
			}
	
		result = parseResult(atoi(buffer));
		if ((result == 0) && (i == 1))
			{
			setstatus(7);						/* kTellyHandshake */
			sendstr("ATD\r");
			}
			
		if (result != 0)						/* first one handles the NO ANSWER, NO DIALTONE, etc. */
			{
			setdtr(0);
			return result;
			}
		}

	printf("TellyScript: dterate = %d, dcerate = %d, protocol = %d, compression = %d",
		dterate, dcerate, protocol, compression);
	setconnectionstats(dterate, dcerate, protocol, compression);
	setstatus(2);								/* kTellyCarrier */

	printf("TellyScript: CONNECT, waiting for login: prompt");

	if (waitfor("ogin:", 5, 900))
		{
		setstatus(4);			/* kTellyLogin */
		printf("TellyScript: got login: prompt, sending username");
		sendstr("trial\r");
		printf("TellyScript: waiting for password: prompt");
		if (waitfor("word:", 5, 900))
			{
			printf("TellyScript: got password: prompt, sending password");
			sendstr("GimmeMyWebTV\r");
			printf("TellyScript: starting ppp.");
			setstatus(5);		/* kNegotiatingPPP */

			if (!startppp())
				{
				printf("TellyScript: PPP negotiation failed");
				setdtr(0);
				return 8;
				}

			printf("TellyScript: Link connected.");
			setstatus(1);		/* kTellyConnected */

			printf("TellyScript: total time = %d (seconds)", (ticks() - start)/60);
			
			return 2;			/* kTellyLinkConnected */
			}
		else
			printf("TellyScript: Didn't get password prompt");
		}
	else
		{
		printf("TellyScript: TIMEOUT waiting for ogin: message");
		printf("TellyScript: chars waiting = %d", countpending());
		}

	setdtr(0);
	return 9;				/* kTellyUnknownError */
}
